name: Build container image and deploy on dockerhub
on:
  push:
    branches-ignore:
      - 'dependabot/**'
  pull_request:
    
jobs:
  success:
    permissions: 
        contents: write
        packages: write
        actions: write
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          submodules: 'recursive'
      - name: Compute name
        id: name
        run: |
          IMAGE_NAME="$(
            echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]' | sed s/docker-//
          )"
          echo "image-name=$IMAGE_NAME" >> $GITHUB_OUTPUT
      - name: Build Image
        run: |
          echo docker build -t "${{ steps.name.outputs.image-name }}:latest" .
          docker build -t "${{ steps.name.outputs.image-name }}" .
      - name: Download the Alchemist pkgbuild
        run: git clone https://aur.archlinux.org/alchemist.git
      - name: Run test
        run: |
          chmod 777 alchemist
          docker run --rm -v "$(pwd)/alchemist:/alchemist" --workdir /alchemist "${{ steps.name.outputs.image-name }}:latest" makepkg --printsrcinfo
      - name: Determine whether this build may run deployments
        id: may-deploy
        run: |
          echo "may-deploy=${{
            !github.event.repository.fork && (
              github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
            )
          }}" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: package.json
      - name: Login to Docker Hub
        if: steps.may-deploy.outputs.may-deploy
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          DOCKER_USERNAME: danysk
        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin docker.io
      - name: Create Release
        if: steps.may-deploy.outputs.may-deploy
        env:
          IMAGE_NAME: "${{ steps.name.outputs.image-name }}"
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          npm install
          npx semantic-release --debug
